name: ManyLinux CI - Release Slim and Fat Jar
on: [workflow_dispatch]

jobs:
  linux_jars:
    name: manylinux_jars
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        artifact: ["slim", "fat"]
    container: monetdb/dev-builds:Jul2021_manylinux
    env:
      MDBE_JAVA_VERSION: 1.0-SNAPSHOT
      MONETDB_INSTALL: /usr/local
    steps:
      - uses: actions/checkout@v2

      #Set global environment variables
      - name: Env variables (slim jar)
        if: ${{ matrix.artifact == 'slim' }}
        run: |
          echo "MVN_FLAGS=linux-slim,release" >> $GITHUB_ENV
          echo "ARTIFACT=monetdbe-java-${{ env.MDBE_JAVA_VERSION }}-linux-slim.jar" >> $GITHUB_ENV
          echo "M2_REPO=/root/.m2/repository/monetdb/monetdbe-java/${{ env.MDBE_JAVA_VERSION }}" >> $GITHUB_ENV
      - name: Env variables (fat jar)
        if: ${{ matrix.artifact == 'fat' }}
        run: |
          echo "MVN_FLAGS=linux-slim,linux-fat,release" >> $GITHUB_ENV
          echo "ARTIFACT=monetdbe-java-${{ env.MDBE_JAVA_VERSION }}-linux-fat.jar" >> $GITHUB_ENV
          echo "M2_REPO=/root/.m2/repository/monetdb/monetdbe-java/${{ env.MDBE_JAVA_VERSION }}" >> $GITHUB_ENV

      #Java, maven, gpg and patchelf setup; set up test env
      - name: Set up JDK 1.8 and maven settings.xml
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MVN_DEPLOY_USERNAME
          server-password: MVN_DEPLOY_PASSWORD
          gpg-passphrase: MVN_GPG_PASSPHRASE
          settings-path: /root/.m2/
      - name: Setup Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Install patchelf
        run: yum install -y patchelf chrpath
      #- name: Import GPG private key for maven release (for sign-maven-plugin)
      #  run: |
      #    touch /root/.m2/sign-key.asc
      #    echo -e "${{ secrets.MVN_GPG_PRIVATE_KEY_SIMPLIFY }}" > /root/.m2/sign-key.asc
      - name: Set up test environment
        run: |
          mkdir -p $GITHUB_WORKSPACE/testdata/taxi $GITHUB_WORKSPACE/testdata/localdb
          wget -O testdata/taxi/yellow_tripdata_2016-01.csv https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2016-01.csv

      #Install native library; collect library dependencies
      - name: Install native library (libmonetdbe-java.dylib)
        run: |
          cd native
          mvn clean install -DMonetDB_dir=$MONETDB_INSTALL -P linux-release --no-transfer-progress
          cd ..
      - name: Collect direct dependencies
        run: |
          mkdir collect_libs
          cp $MONETDB_LIBS/libbat.so.?? $MONETDB_LIBS/libmapi.so.?? $MONETDB_LIBS/libmonetdb5.so.?? $MONETDB_LIBS/libmonetdbe.so.? $MONETDB_LIBS/libmonetdbsql.so.?? $MONETDB_LIBS/libstream.so.?? collect_libs
        env:
          MONETDB_LIBS: ${{ env.MONETDB_INSTALL }}/lib64
      #for file in $GITHUB_WORKSPACE/collect_libs/*; do chrpath -r \$\ORIGIN/. $file; done
      - name: Change rpath of MonetDB libraries to package
        if: ${{ matrix.artifact == 'fat' }}
        run: |
          ldd $GITHUB_WORKSPACE/collect_libs/*
          ldd $GITHUB_WORKSPACE/collect_libs/*
      - name: Collect transitive dependencies (only for fat jar)
        if: ${{ matrix.artifact == 'fat' }}
        run: cp /lib64/libz.so.1 /lib64/libpcre.so.1 collect_libs

      #Package jar, test and deploy
      - name: Compile Java, package into jar, do unit tests and deploy
        run: |
          cd java
          mvn clean deploy -DCOLLECT_LIBS=$GITHUB_WORKSPACE/collect_libs -P ${{ env.MVN_FLAGS }} --no-transfer-progress
          cd ..
        env:
          MVN_DEPLOY_USERNAME: monetdb
          MVN_DEPLOY_PASSWORD: ${{ secrets.MVN_DEPLOY_PASSWORD }}
          MVN_GPG_PASSPHRASE: ${{ secrets.MVN_GPG_PASSPHRASE }}

      #Run example and publish jar
      - name: Run example class (SimpleTypes)
        run: |
          javac -cp ${{env.M2_REPO}}/${{env.ARTIFACT}} example/SimpleTypes.java
          java -cp ${{env.M2_REPO}}/${{env.ARTIFACT}}:example/ SimpleTypes
      - name: Publish error log
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: hs_err.log
          path: /__w/MonetDBe-Java/MonetDBe-Java/hs_err_pid*.log
      - name: Publish Linux jar
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{env.ARTIFACT}}
          path: ${{env.M2_REPO}}/${{env.ARTIFACT}}
