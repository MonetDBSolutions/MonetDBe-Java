name: MonetDBe-Java Linux CI Slim and Fat Jar release (Oct2020 version from Docker)
on:
  [push,workflow_dispatch,pull_request]

jobs:
  linux_oct_slim_build:
    name: linux_oct_slim_build
    runs-on: ubuntu-latest
    container: monetdb/dev-builds:Oct2020_manylinux
    env:
      MONETDB_INSTALL: /usr/local
      MONETDB_LIBS: /usr/local/lib64
      M2_REPO_JAVA: /root/.m2/repository/monetdb/monetdbe-java/1.0-SNAPSHOT
      ARTIFACT_JAVA: monetdbe-java-1.0-SNAPSHOT-linux-slim.jar
    steps:
    #Java, maven, gpg and chrpath setup; set up test env
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8 and maven settings.xml
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: ossrh
        server-username: MVN_DEPLOY_USERNAME
        server-password: MVN_DEPLOY_PASSWORD
        gpg-passphrase: MVN_GPG_PASSPHRASE
    - name: Setup Maven
      uses: stCarolas/setup-maven@v4
    - name: Import GPG private key for maven release
      run: |
        echo -e "${{ secrets.MVN_GPG_PRIVATE_KEY }}" | gpg --batch --import
        gpg --list-secret-keys
    - name: Set up test environment
      run: |
        mkdir -p $GITHUB_WORKSPACE/testdata/taxi $GITHUB_WORKSPACE/testdata/localdb
        wget -O testdata/taxi/yellow_tripdata_2016-01.csv https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2016-01.csv
    #- name: Install chrpath
    #  run: apt-get install -y chrpath
    - name: Install chrpath
      run: yum install -y chrpath

    #Install native library; collect libraries
    - name: Install native library (libmonetdbe-java.dylib)
      run: |
        cd native
        mvn clean install -DMonetDB_dir=$MONETDB_INSTALL -P linux-release
        cd ..
    - name: Move direct dependencies (MonetDB libs)
      run: |
        mkdir collect_libs
        cp $MONETDB_LIBS/libbat.so.?? $MONETDB_LIBS/libmapi.so.?? $MONETDB_LIBS/libmonetdb5.so.?? $MONETDB_LIBS/libmonetdbe.so.? $MONETDB_LIBS/libmonetdbsql.so.?? $MONETDB_LIBS/libstream.so.?? collect_libs
    - name: Change rpath of MonetDB libraries to package
      run: |
        for file in $GITHUB_WORKSPACE/collect_libs/*; do chrpath -r '$ORIGIN/.' $file; done

    #Package jar, test and deploy
    - name: Compile Java, package into jar, do unit tests and deploy
      run: |
        cd java
        mvn clean deploy -DCOLLECT_LIBS=$GITHUB_WORKSPACE/collect_libs -P linux-slim,release
        cd ..
      env:
        MVN_DEPLOY_USERNAME: monetdb
        MVN_DEPLOY_PASSWORD: ${{ secrets.MVN_DEPLOY_PASSWORD }}
        MVN_GPG_PRIVATE_KEY: ${{ secrets.MVN_GPG_PRIVATE_KEY }}
        MVN_GPG_PASSPHRASE: ${{ secrets.MVN_GPG_PASSPHRASE }}

    #Run example and publish jar
    - name: Run example class (SimpleTypes)
      run: |
        javac -cp $M2_REPO_JAVA/$ARTIFACT_JAVA example/SimpleTypes.java
        java -cp $M2_REPO_JAVA/$ARTIFACT_JAVA:example/ SimpleTypes
    #TODO Change this to env variable, $var and $env.var didn't work
    - name: Publish Linux slim jar
      uses: actions/upload-artifact@v2
      with:
        name: monetdbe-java-1.0-SNAPSHOT-linux-slim.jar
        path: /root/.m2/repository/monetdb/monetdbe-java/1.0-SNAPSHOT/monetdbe-java-1.0-SNAPSHOT-linux-slim.jar
