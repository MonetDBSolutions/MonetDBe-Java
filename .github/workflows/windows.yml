name: Windows CI - Release Jar
on: [workflow_dispatch]

jobs:
  windows_build:
    name: windows_build
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        mdb_version: ["Jan2022","Jul2021"]
    env:
      MDBE_JAVA_VERSION: "1.11-SNAPSHOT"
      MDB_VERSION: ${{ matrix.mdb_version }}
    steps:
      - uses: actions/checkout@v2

      #Set global environment variables
      - name: Env variables
        run: |
          echo "ARTIFACT=monetdbe-java-${{ env.MDBE_JAVA_VERSION }}-windows.jar" |  Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "M2_REPO=C:\Users\runneradmin\.m2\repository\monetdb\monetdbe-java\${{ env.MDBE_JAVA_VERSION }}" |  Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      #Java, maven, gpg and dependencies setup; set up test env
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MVN_DEPLOY_USERNAME
          server-password: MVN_DEPLOY_PASSWORD
          gpg-passphrase: MVN_GPG_PASSPHRASE
      - name: Setup Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Setup VC tools
        uses: ilammy/msvc-dev-cmd@v1
      - name: Import GPG private key for maven release
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.MVN_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.MVN_GPG_PASSPHRASE }}
      - name: Install vcpkg packages
        uses: lukka/run-vcpkg@v5
        with:
          vcpkgArguments: --triplet x64-windows libiconv openssl libxml2 pcre zlib getopt bzip2 curl
          vcpkgGitCommitId: e803bf11296d8e7900dafb41e7b1224778d33dc6
          appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}
      - name: Install Bison/Flex
        run: choco install -y winflexbison
      - name: Set up test environment
        run: |
          Set-Location D:\a\MonetDBe-Java\MonetDBe-Java
          md testdata\taxi
          md testdata\localdb
          iwr -outf testdata\taxi\yellow_tripdata_2016-01.csv https://s3.amazonaws.com/nyc-tlc/trip+data/yellow_tripdata_2016-01.csv

      #Download and install MonetDB
      - name: Get monetdb
        run: |
          Set-Location c:\
          curl.exe https://www.monetdb.org/hg/MonetDB/archive/${{ env.MDB_VERSION }}.zip -O
          unzip.exe ${{ env.MDB_VERSION }}.zip
      - name: Compile and install MonetDB
        run: |
          mkdir c:\MonetDB-${{ env.MDB_VERSION }}\build
          Set-Location c:\MonetDB-${{ env.MDB_VERSION }}\build

          cmake -G "Visual Studio 16 2019" `
            -A x64 `
            -DCMAKE_TOOLCHAIN_FILE=D:\a\MonetDBe-Java\MonetDBe-Java\vcpkg\scripts\buildsystems\vcpkg.cmake `
            -DCMAKE_INSTALL_PREFIX=C:\monetdb-${{ env.MDB_VERSION }} `
            -DTESTING=OFF `
            -DCMAKE_BUILD_TYPE=Release `
            -DASSERT=OFF `
            -DODBC=false `
            -DPY3INTEGRATION=OFF `
            -DINT128=ON `
            ..
          cmake --build . --target ALL_BUILD --parallel 8  --config Release
          cmake --build . --target INSTALL  --config Release

      #Install native library, collect libraries, package jar, test and deploy
      #mvn clean deploy "-DMonetDB_dir=C:\monetdb" "-DVCPKG_ROOT=$Env:VCPKG_ROOT" -P release --no-transfer-progress
      - name: Install native library, collect libraries, package jar, test and deploy
        run: |
          Set-Location D:\a\MonetDBe-Java\MonetDBe-Java\native
          mvn clean install "-DMonetDB_dir=C:\monetdb" --no-transfer-progress
          Set-Location D:\a\MonetDBe-Java\MonetDBe-Java\java
          mvn clean deploy "-DMonetDB_dir=C:\monetdb" "-DVCPKG_ROOT=$Env:VCPKG_ROOT" -P release --no-transfer-progress
        env:
          MVN_DEPLOY_USERNAME: monetdb
          MVN_DEPLOY_PASSWORD: ${{ secrets.MVN_DEPLOY_PASSWORD }}
          MVN_GPG_PRIVATE_KEY: ${{ secrets.MVN_GPG_PRIVATE_KEY }}
          MVN_GPG_PASSPHRASE: ${{ secrets.MVN_GPG_PASSPHRASE }}

      #Run example and publish jar
      - name: Run example class (ComplexTypes)
        run: |
          Set-Location D:\a\MonetDBe-Java\MonetDBe-Java\example
          javac -cp ${{ env.M2_REPO }}\${{ env.ARTIFACT }} ComplexTypes.java
          java -classpath ".\;${{ env.M2_REPO }}\${{ env.ARTIFACT }}" ComplexTypes
      - name: Publish Windows jar
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ env.M2_REPO }}\${{ env.ARTIFACT }}
